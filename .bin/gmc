#!/usr/bin/env python

from subprocess import call, check_output
from sys import exit

def conflicted_files():
    return filter(
        None,
        check_output(
            'git --no-pager diff --name-only --diff-filter=U',
            shell=True).split('\n'))

# Write vimrc function that uses current qf index compared to len(getqflist()) (represents total # of qf windows); if last qf window, command should quit vim, otherwise move to next qf window
# Modify below to open vim and run Gmerge, then Gdiff on each file
commands = [
    'Gmerge',
    'Gdiff',
    'set nohlsearch',
    "let @/='<<<<<<<'",
    'set hlsearch',
    'nmap <leader>dt :call DiffGet(2)<CR>',
    'nmap <leader>dm :call DiffGet(3)<CR>',
    'nmap <leader>n :call NextMergeConflict()<CR>',
    'normal ggn'
    # TODO: change `n` to :NextMergeConflict()<CR>
    # "nmap <leader>dt :diffget //2<CR>n",
    # "nmap <leader>dm :diffget //3<CR>n",
    # "nmap <leader>x :Gwrite<CR>:qa<CR>",
    ]
arguments = ' '.join(map(lambda x: '-c "%s"' % x, commands))
# print 'vim %s' % arguments
# exit(0)

while True:
    if not conflicted_files():
        break
    vim = call('vim %s .' % arguments, shell=True)
    if vim:
        exit(1)
    call('EDITOR=cat git rebase --continue', shell=True)
